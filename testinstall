#!/bin/bash
# WF 2018-12-31
# test the installation

#
# display the given error and exit
# param 
#   1: l_msg
#
error() {
  local l_msg="$1"
  echo "$l_msg" 1>&2
  exit 1
}

#
# wait for the given string to appear in the given file
# params
#   #1 l_text: the string to wait for
#   #2 l_file: the file to monitor
#   #3 l_interval: the interval in seconds to watch
#   #4 l_limit: how many intervals to wait as a maximum
#
waitfor() {
  local l_text="$1"
  local l_file="$2"
  local l_interval="$3"
  local l_limit="$4"
  local l_rounds=0
  # wait 20x  longer in travis environment
  case $USER in
    travis) l_limit=$(($l_limit*20))
  esac
  while true ; do
    grep "$l_text" -m 1 "$l_file"
    if [ $? -eq 0 ]
    then
      echo "✅$l_text"
      break
    fi 
    sleep $l_interval
    l_rounds=$(($l_rounds+1))
    if [ $l_rounds -ge $l_limit ]
    then
      cat $l_file
      error "❌$l_text not found in $l_file after trying $l_limit times for $l_interval secs" 
      break
    fi 
  done
}

#
# check that the given url contains the given text
#
webcheck() {
  local l_url="$1"
  local l_text="$2"
  local l_found=$(curl -s "$l_url" | grep "$l_text")
  if [ $? -ne 0 ]
  then
    error "❌$l_text not found at $l_url" 
  else
    echo "✅$l_url:$l_found"
  fi
}

# get all profiwiki volumes
profiwiki_volumes() {
  docker volume ls | grep -v "VOLUME" | grep "profiwiki" | cut -c21-
}

# cleanup the docker enviroment
clean() {
  echo "cleaning docker environment - stopping and removing containers and removing volumes for profiwiki"
  docker stop $(docker ps -q --filter="name=profiwiki")
  docker rm $(docker ps -aq --filter="name=profiwiki")
  for volume in $(profiwiki_volumes) 
  do
    docker volume rm $volume
  done
}

#
# get the container name for the given wiki name
# params
#   #1: l_wiki - the wiki name e.g. mw1_27_5
# returns
#   the container name e.g. profiwiki127
#
container_name() {
  local l_wiki="$1"
  local l_prefix="profiwiki"
  local l_version=""
  case $l_wiki in
    mw1_27_5) l_version=127;;
    mw1_30_1) l_version=130;;
    mw1_31_1) l_version=131;;
  esac 
  echo ${l_prefix}${l_version}
}

# test the given installation
# param #1 start script for wiki installation
dotest() {
  clean
  local l_wiki="$1"
  local l_container=$(container_name $l_wiki)
  # media wiki container tag
  local l_mw_container=${l_container}_mw_1
  echo "testing $l_wiki"
  # run the install job in the background
  rm nohup.out
  # test with random password
  nohup ./$l_wiki -r&
  # check that the Apache 2 Webserver is up
  # 30 times 0.2 secs = 6 secs timeout
  waitfor "apache2 -D FOREGROUND" nohup.out 0.2 30
  # check the current state of the website
  # no LocalSettings should be available at this time
  local l_mwsite="localhost:8080"
  webcheck $l_mwsite "LocalSettings.php not found"
  # copy the phpinfo.php to the mediawiki docker container
  docker cp image/phpinfo.php ${l_mw_container}:/var/www/html
  # check the result - e.g. the PHP version should show
  webcheck $l_mwsite/phpinfo.php "PHP/7.0.33"
}

# test all wikis
testall() {
  # loop over the relevant wikis
  for wiki in mw*
  do
    dotest $wiki
  done
}

# stop all running containers
#dotest mw1_31_1
echo "Testing for user $USER"
testall
#dotest mw1_27_5
